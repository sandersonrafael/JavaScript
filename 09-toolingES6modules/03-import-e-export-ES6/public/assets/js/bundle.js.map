{"version":3,"file":"bundle.js","mappings":"kyBAcO,IAGMA,EAAMC,GACf,SAAAD,EAAYE,EAAMC,I,4FAAWC,CAAA,KAAAJ,GACzBK,KAAKH,KAAOA,EACZG,KAAKF,UAAYA,CACrB,IChBJG,QAAQC,IAJK,QAIK,cDLL,OACK,UAaG,GAVVC,GCGX,IAAMC,EAAK,IAAIC,EAAM,OAAQ,UAC7BJ,QAAQC,IAAIE,GAOZH,QAAQC,IDeGC,E","sources":["webpack://02-webpack/./src/modulo1.js","webpack://02-webpack/./src/index.js"],"sourcesContent":["const nome = 'Luiz'\r\nconst sobrenome = 'Miranda'\r\n\r\nfunction soma(x, y) {\r\n    return x + y\r\n}\r\n\r\n// método mais simples para exportar\r\n\r\n// exportada as constantes\r\n// posso exportar com outro nome de variável, usando o \"as\", como: export { nome as outroNome }\r\nexport { nome, sobrenome, soma }\r\n\r\n// outro método de exportar\r\nexport const idade = 30\r\n\r\n// com classes:\r\nexport class Pessoa {\r\n    constructor(nome, sobrenome) {\r\n        this.nome = nome\r\n        this.sobrenome = sobrenome\r\n    }\r\n}\r\n\r\n// caso eu não queira que o arquivo seja exportado mesmo sendo chamado pelo import * as Modulo from './modulo1.js'\r\n// basta não exportar de forma alguma. Assim, o termo só será acessível pelo módulo em si\r\nconst cpf = '000.000.000-00' // não foi exportado, então é uma variável privada\r\n\r\n// posso também declarar uma função default. Qualquer coisa que importar deste arquivo, com nome qualquer, será por padrão a função \"defaultada\"\r\nexport default function subtrai(x, y) {\r\n    return x - y\r\n}\r\n\r\n// se eu quiser declarar uma constante default, preciso declarar ela normalmente no código, como: const pessoa1 = \"Felipe\" ->\r\n// export { pessoa1 as default }\r\n\r\n// pode-se exportar uma arrow function anônima como padrão. ex:\r\n// export default (a, b) => a + b","// importa o nome do arquivo modulo1.js\r\nconst nome = 'Pedro'\r\nimport { nome as nome2, sobrenome, idade, soma, Pessoa as Gente} from './modulo1.js'\r\n// caso já tenha uma variável neste documento com o mesmo nome, pode-se solicitar a importação com outro nome, usando \"as\"\r\n\r\nconsole.log(nome, '<- 1 , 2 ->', nome2, sobrenome, idade, soma(1,5))\r\n\r\nconst p1 = new Gente('Luiz', 'Otávio')\r\nconsole.log(p1)\r\n\r\n// para importar tudo, posso usar:\r\n// import * as Modulo from './modulo1.js'\r\n\r\n// importando subtração, que é o default:\r\nimport qualquerNomeDeFuncao from './modulo1'\r\nconsole.log(qualquerNomeDeFuncao(10, 3)) // vai exibir 7, pois chama a default que retorna (x - y)"],"names":["Pessoa","_createClass","nome","sobrenome","_classCallCheck","this","console","log","x","p1","Gente"],"sourceRoot":""}